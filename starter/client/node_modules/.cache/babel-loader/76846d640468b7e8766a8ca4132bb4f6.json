{"ast":null,"code":"var _jsxFileName = \"/Users/blehjo/projects/aws-thought/starter/client/src/components/ThoughtForm/index.js\";\nimport React, { useState, useRef } from \"react\";\nconst fileInput = useRef(null); // handle image upload\n\nconst handleImageUpload = event => {\n  event.preventDefault();\n  const data = new FormData();\n  data.append('image', fileInput.current.files[0]); // send image file to endpoint with the postImage function\n\n  const postImage = async () => {\n    try {\n      const res = await fetch('/api/image-upload', {\n        mode: 'cors',\n        method: 'POST',\n        body: data\n      });\n      if (!res.ok) throw new Error(res.statusText);\n      const postResponse = await res.json();\n      setFormState({ ...formState,\n        image: postResponse.Location\n      });\n      console.log('postImage: ', postResponse.Location);\n      return postResponse.Location;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  postImage(); // ...\n};\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\"\n  });\n  const [characterCount, setCharacterCount] = useState(0); // update state based on form input changes\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setFormState({ ...formState,\n        [event.target.name]: event.target.value\n      });\n      setCharacterCount(event.target.value.length);\n    }\n  }; // submit form\n\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n\n    const postData = async () => {\n      const res = await fetch('/api/users', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formState)\n      });\n      const data = await res.json();\n      console.log(data);\n    };\n\n    postData(); // clear form value\n\n    setFormState({\n      username: \"\",\n      thought: \"\"\n    });\n    setCharacterCount(0);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: `m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Character Count: \", characterCount, \"/280\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"flex-row justify-center justify-space-between-md align-stretch\",\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"Name\",\n    name: \"username\",\n    value: formState.username,\n    className: \"form-input col-12 \",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"Here's a new thought...\",\n    name: \"thought\",\n    value: formState.thought,\n    className: \"form-input col-12 \",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-input cole-12 p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Add an image to your thought:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: fileInput,\n    className: \"form-input p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn\",\n    onClick: handleImageUpload,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn col-12 \",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\n\nexport default ThoughtForm;","map":{"version":3,"sources":["/Users/blehjo/projects/aws-thought/starter/client/src/components/ThoughtForm/index.js"],"names":["React","useState","useRef","fileInput","handleImageUpload","event","preventDefault","data","FormData","append","current","files","postImage","res","fetch","mode","method","body","ok","Error","statusText","postResponse","json","setFormState","formState","image","Location","console","log","error","ThoughtForm","username","thought","characterCount","setCharacterCount","handleChange","target","value","length","name","handleFormSubmit","postData","headers","Accept","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nconst fileInput = useRef(null);\n\n// handle image upload\nconst handleImageUpload = (event) => {\n  event.preventDefault();\n  const data = new FormData();\n  data.append('image', fileInput.current.files[0]);\n  // send image file to endpoint with the postImage function\n  const postImage = async () => {\n    try {\n      const res = await fetch('/api/image-upload', {\n        mode: 'cors',\n        method: 'POST',\n        body: data,\n      });\n      if (!res.ok) throw new Error(res.statusText);\n      const postResponse = await res.json();\n      setFormState({ ...formState, image: postResponse.Location });\n      console.log('postImage: ', postResponse.Location);\n      return postResponse.Location;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  postImage();\n  // ...\n};\n\nconst ThoughtForm = () => {\n  const [formState, setFormState] = useState({\n    username: \"\",\n    thought: \"\",\n  });\n  const [characterCount, setCharacterCount] = useState(0);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    if (event.target.value.length <= 280) {\n      setFormState({ ...formState, [event.target.name]: event.target.value });\n      setCharacterCount(event.target.value.length);\n    }\n  };\n\n  // submit form\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const postData = async () => {\n      const res = await fetch('/api/users', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formState),\n      });\n      const data = await res.json();\n      console.log(data);\n    };\n    postData();\n\n    // clear form value\n    setFormState({ username: \"\", thought: \"\" });\n    setCharacterCount(0);\n  };\n\n  return (\n    <div>\n      <p className={`m-0 ${characterCount === 280 ? \"text-error\" : \"\"}`}>\n        Character Count: {characterCount}/280\n      </p>\n      <form\n        className=\"flex-row justify-center justify-space-between-md align-stretch\"\n        onSubmit={handleFormSubmit}\n      >\n        <input\n          placeholder=\"Name\"\n          name=\"username\"\n          value={formState.username}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></input>\n        <textarea\n          placeholder=\"Here's a new thought...\"\n          name=\"thought\"\n          value={formState.thought}\n          className=\"form-input col-12 \"\n          onChange={handleChange}\n        ></textarea>\n        <label className=\"form-input cole-12 p-1\">\n          Add an image to your thought:\n          <input type=\"file\" ref={fileInput} className=\"form-input p-2\" />\n          <button className=\"btn\" onClick={handleImageUpload} type=\"submit\">\n            Upload\n          </button>\n        </label>\n        <button className=\"btn col-12 \" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ThoughtForm;\n"]},"metadata":{},"sourceType":"module"}